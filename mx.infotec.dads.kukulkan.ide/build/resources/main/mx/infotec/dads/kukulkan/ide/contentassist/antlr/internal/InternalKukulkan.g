/*
 * generated by Xtext 2.13.0
 */
grammar InternalKukulkan;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package mx.infotec.dads.kukulkan.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package mx.infotec.dads.kukulkan.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import mx.infotec.dads.kukulkan.services.KukulkanGrammarAccess;

}
@parser::members {
	private KukulkanGrammarAccess grammarAccess;

	public void setGrammarAccess(KukulkanGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuledomainModel
entryRuledomainModel
:
{ before(grammarAccess.getDomainModelRule()); }
	 ruledomainModel
{ after(grammarAccess.getDomainModelRule()); } 
	 EOF 
;

// Rule domainModel
ruledomainModel 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDomainModelAccess().getAlternatives()); }
		(rule__DomainModel__Alternatives)
		{ after(grammarAccess.getDomainModelAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleentity
entryRuleentity
:
{ before(grammarAccess.getEntityRule()); }
	 ruleentity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule entity
ruleentity 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityAccess().getGroup()); }
		(rule__Entity__Group__0)
		{ after(grammarAccess.getEntityAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleentityField
entryRuleentityField
:
{ before(grammarAccess.getEntityFieldRule()); }
	 ruleentityField
{ after(grammarAccess.getEntityFieldRule()); } 
	 EOF 
;

// Rule entityField
ruleentityField 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityFieldAccess().getGroup()); }
		(rule__EntityField__Group__0)
		{ after(grammarAccess.getEntityFieldAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulefieldType
entryRulefieldType
:
{ before(grammarAccess.getFieldTypeRule()); }
	 rulefieldType
{ after(grammarAccess.getFieldTypeRule()); } 
	 EOF 
;

// Rule fieldType
rulefieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFieldTypeAccess().getAlternatives()); }
		(rule__FieldType__Alternatives)
		{ after(grammarAccess.getFieldTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleentityType
entryRuleentityType
:
{ before(grammarAccess.getEntityTypeRule()); }
	 ruleentityType
{ after(grammarAccess.getEntityTypeRule()); } 
	 EOF 
;

// Rule entityType
ruleentityType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEntityTypeAccess().getEntityParserRuleCall()); }
		ruleentity
		{ after(grammarAccess.getEntityTypeAccess().getEntityParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestringFieldType
entryRulestringFieldType
:
{ before(grammarAccess.getStringFieldTypeRule()); }
	 rulestringFieldType
{ after(grammarAccess.getStringFieldTypeRule()); } 
	 EOF 
;

// Rule stringFieldType
rulestringFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringFieldTypeAccess().getGroup()); }
		(rule__StringFieldType__Group__0)
		{ after(grammarAccess.getStringFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestringType
entryRulestringType
:
{ before(grammarAccess.getStringTypeRule()); }
	 rulestringType
{ after(grammarAccess.getStringTypeRule()); } 
	 EOF 
;

// Rule stringType
rulestringType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringTypeAccess().getStringKeyword()); }
		'String'
		{ after(grammarAccess.getStringTypeAccess().getStringKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumericFieldType
entryRulenumericFieldType
:
{ before(grammarAccess.getNumericFieldTypeRule()); }
	 rulenumericFieldType
{ after(grammarAccess.getNumericFieldTypeRule()); } 
	 EOF 
;

// Rule numericFieldType
rulenumericFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericFieldTypeAccess().getGroup()); }
		(rule__NumericFieldType__Group__0)
		{ after(grammarAccess.getNumericFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumericTypes
entryRulenumericTypes
:
{ before(grammarAccess.getNumericTypesRule()); }
	 rulenumericTypes
{ after(grammarAccess.getNumericTypesRule()); } 
	 EOF 
;

// Rule numericTypes
rulenumericTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericTypesAccess().getAlternatives()); }
		(rule__NumericTypes__Alternatives)
		{ after(grammarAccess.getNumericTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINTEGER
entryRuleINTEGER
:
{ before(grammarAccess.getINTEGERRule()); }
	 ruleINTEGER
{ after(grammarAccess.getINTEGERRule()); } 
	 EOF 
;

// Rule INTEGER
ruleINTEGER 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINTEGERAccess().getIntegerKeyword()); }
		'Integer'
		{ after(grammarAccess.getINTEGERAccess().getIntegerKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLONG
entryRuleLONG
:
{ before(grammarAccess.getLONGRule()); }
	 ruleLONG
{ after(grammarAccess.getLONGRule()); } 
	 EOF 
;

// Rule LONG
ruleLONG 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLONGAccess().getLongKeyword()); }
		'Long'
		{ after(grammarAccess.getLONGAccess().getLongKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBIG_DECIMAL
entryRuleBIG_DECIMAL
:
{ before(grammarAccess.getBIG_DECIMALRule()); }
	 ruleBIG_DECIMAL
{ after(grammarAccess.getBIG_DECIMALRule()); } 
	 EOF 
;

// Rule BIG_DECIMAL
ruleBIG_DECIMAL 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBIG_DECIMALAccess().getBigDecimalKeyword()); }
		'BigDecimal'
		{ after(grammarAccess.getBIG_DECIMALAccess().getBigDecimalKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFLOAT
entryRuleFLOAT
:
{ before(grammarAccess.getFLOATRule()); }
	 ruleFLOAT
{ after(grammarAccess.getFLOATRule()); } 
	 EOF 
;

// Rule FLOAT
ruleFLOAT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFLOATAccess().getFloatKeyword()); }
		'Float'
		{ after(grammarAccess.getFLOATAccess().getFloatKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDOUBLE
entryRuleDOUBLE
:
{ before(grammarAccess.getDOUBLERule()); }
	 ruleDOUBLE
{ after(grammarAccess.getDOUBLERule()); } 
	 EOF 
;

// Rule DOUBLE
ruleDOUBLE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDOUBLEAccess().getDoubleKeyword()); }
		'Double'
		{ after(grammarAccess.getDOUBLEAccess().getDoubleKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulebooleanFieldType
entryRulebooleanFieldType
:
{ before(grammarAccess.getBooleanFieldTypeRule()); }
	 rulebooleanFieldType
{ after(grammarAccess.getBooleanFieldTypeRule()); } 
	 EOF 
;

// Rule booleanFieldType
rulebooleanFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBooleanFieldTypeAccess().getGroup()); }
		(rule__BooleanFieldType__Group__0)
		{ after(grammarAccess.getBooleanFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBOOLEAN_TYPE
entryRuleBOOLEAN_TYPE
:
{ before(grammarAccess.getBOOLEAN_TYPERule()); }
	 ruleBOOLEAN_TYPE
{ after(grammarAccess.getBOOLEAN_TYPERule()); } 
	 EOF 
;

// Rule BOOLEAN_TYPE
ruleBOOLEAN_TYPE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBOOLEAN_TYPEAccess().getBooleanKeyword()); }
		'Boolean'
		{ after(grammarAccess.getBOOLEAN_TYPEAccess().getBooleanKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledateFieldType
entryRuledateFieldType
:
{ before(grammarAccess.getDateFieldTypeRule()); }
	 ruledateFieldType
{ after(grammarAccess.getDateFieldTypeRule()); } 
	 EOF 
;

// Rule dateFieldType
ruledateFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateFieldTypeAccess().getGroup()); }
		(rule__DateFieldType__Group__0)
		{ after(grammarAccess.getDateFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledateTypes
entryRuledateTypes
:
{ before(grammarAccess.getDateTypesRule()); }
	 ruledateTypes
{ after(grammarAccess.getDateTypesRule()); } 
	 EOF 
;

// Rule dateTypes
ruledateTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDateTypesAccess().getAlternatives()); }
		(rule__DateTypes__Alternatives)
		{ after(grammarAccess.getDateTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDATE
entryRuleDATE
:
{ before(grammarAccess.getDATERule()); }
	 ruleDATE
{ after(grammarAccess.getDATERule()); } 
	 EOF 
;

// Rule DATE
ruleDATE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDATEAccess().getDateKeyword()); }
		'Date'
		{ after(grammarAccess.getDATEAccess().getDateKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleLOCAL_DATE
entryRuleLOCAL_DATE
:
{ before(grammarAccess.getLOCAL_DATERule()); }
	 ruleLOCAL_DATE
{ after(grammarAccess.getLOCAL_DATERule()); } 
	 EOF 
;

// Rule LOCAL_DATE
ruleLOCAL_DATE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getLOCAL_DATEAccess().getLocalDateKeyword()); }
		'LocalDate'
		{ after(grammarAccess.getLOCAL_DATEAccess().getLocalDateKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleZONED_DATETIME
entryRuleZONED_DATETIME
:
{ before(grammarAccess.getZONED_DATETIMERule()); }
	 ruleZONED_DATETIME
{ after(grammarAccess.getZONED_DATETIMERule()); } 
	 EOF 
;

// Rule ZONED_DATETIME
ruleZONED_DATETIME 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getZONED_DATETIMEAccess().getZonedDateTimeKeyword()); }
		'ZonedDateTime'
		{ after(grammarAccess.getZONED_DATETIMEAccess().getZonedDateTimeKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleINSTANT
entryRuleINSTANT
:
{ before(grammarAccess.getINSTANTRule()); }
	 ruleINSTANT
{ after(grammarAccess.getINSTANTRule()); } 
	 EOF 
;

// Rule INSTANT
ruleINSTANT 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getINSTANTAccess().getInstantKeyword()); }
		'Instant'
		{ after(grammarAccess.getINSTANTAccess().getInstantKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblobFieldType
entryRuleblobFieldType
:
{ before(grammarAccess.getBlobFieldTypeRule()); }
	 ruleblobFieldType
{ after(grammarAccess.getBlobFieldTypeRule()); } 
	 EOF 
;

// Rule blobFieldType
ruleblobFieldType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlobFieldTypeAccess().getGroup()); }
		(rule__BlobFieldType__Group__0)
		{ after(grammarAccess.getBlobFieldTypeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblobTypes
entryRuleblobTypes
:
{ before(grammarAccess.getBlobTypesRule()); }
	 ruleblobTypes
{ after(grammarAccess.getBlobTypesRule()); } 
	 EOF 
;

// Rule blobTypes
ruleblobTypes 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlobTypesAccess().getAlternatives()); }
		(rule__BlobTypes__Alternatives)
		{ after(grammarAccess.getBlobTypesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBLOB
entryRuleBLOB
:
{ before(grammarAccess.getBLOBRule()); }
	 ruleBLOB
{ after(grammarAccess.getBLOBRule()); } 
	 EOF 
;

// Rule BLOB
ruleBLOB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBLOBAccess().getBlobKeyword()); }
		'Blob'
		{ after(grammarAccess.getBLOBAccess().getBlobKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleANY_BLOB
entryRuleANY_BLOB
:
{ before(grammarAccess.getANY_BLOBRule()); }
	 ruleANY_BLOB
{ after(grammarAccess.getANY_BLOBRule()); } 
	 EOF 
;

// Rule ANY_BLOB
ruleANY_BLOB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getANY_BLOBAccess().getAnyBlobKeyword()); }
		'AnyBlob'
		{ after(grammarAccess.getANY_BLOBAccess().getAnyBlobKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIMAGE_BLOB
entryRuleIMAGE_BLOB
:
{ before(grammarAccess.getIMAGE_BLOBRule()); }
	 ruleIMAGE_BLOB
{ after(grammarAccess.getIMAGE_BLOBRule()); } 
	 EOF 
;

// Rule IMAGE_BLOB
ruleIMAGE_BLOB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIMAGE_BLOBAccess().getImageBlobKeyword()); }
		'ImageBlob'
		{ after(grammarAccess.getIMAGE_BLOBAccess().getImageBlobKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTEXT_BLOB
entryRuleTEXT_BLOB
:
{ before(grammarAccess.getTEXT_BLOBRule()); }
	 ruleTEXT_BLOB
{ after(grammarAccess.getTEXT_BLOBRule()); } 
	 EOF 
;

// Rule TEXT_BLOB
ruleTEXT_BLOB 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTEXT_BLOBAccess().getTextBlobKeyword()); }
		'TextBlob'
		{ after(grammarAccess.getTEXT_BLOBAccess().getTextBlobKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulestringValidators
entryRulestringValidators
:
{ before(grammarAccess.getStringValidatorsRule()); }
	 rulestringValidators
{ after(grammarAccess.getStringValidatorsRule()); } 
	 EOF 
;

// Rule stringValidators
rulestringValidators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getAlternatives()); }
		(rule__StringValidators__Alternatives)
		{ after(grammarAccess.getStringValidatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulenumericValidators
entryRulenumericValidators
:
{ before(grammarAccess.getNumericValidatorsRule()); }
	 rulenumericValidators
{ after(grammarAccess.getNumericValidatorsRule()); } 
	 EOF 
;

// Rule numericValidators
rulenumericValidators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getAlternatives()); }
		(rule__NumericValidators__Alternatives)
		{ after(grammarAccess.getNumericValidatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleblobValidators
entryRuleblobValidators
:
{ before(grammarAccess.getBlobValidatorsRule()); }
	 ruleblobValidators
{ after(grammarAccess.getBlobValidatorsRule()); } 
	 EOF 
;

// Rule blobValidators
ruleblobValidators 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getAlternatives()); }
		(rule__BlobValidators__Alternatives)
		{ after(grammarAccess.getBlobValidatorsAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulerequiredValidator
entryRulerequiredValidator
:
{ before(grammarAccess.getRequiredValidatorRule()); }
	 rulerequiredValidator
{ after(grammarAccess.getRequiredValidatorRule()); } 
	 EOF 
;

// Rule requiredValidator
rulerequiredValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRequiredValidatorAccess().getRequiredKeyword()); }
		'required'
		{ after(grammarAccess.getRequiredValidatorAccess().getRequiredKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleminLengthValidator
entryRuleminLengthValidator
:
{ before(grammarAccess.getMinLengthValidatorRule()); }
	 ruleminLengthValidator
{ after(grammarAccess.getMinLengthValidatorRule()); } 
	 EOF 
;

// Rule minLengthValidator
ruleminLengthValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinLengthValidatorAccess().getGroup()); }
		(rule__MinLengthValidator__Group__0)
		{ after(grammarAccess.getMinLengthValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemaxLengthValidator
entryRulemaxLengthValidator
:
{ before(grammarAccess.getMaxLengthValidatorRule()); }
	 rulemaxLengthValidator
{ after(grammarAccess.getMaxLengthValidatorRule()); } 
	 EOF 
;

// Rule maxLengthValidator
rulemaxLengthValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxLengthValidatorAccess().getGroup()); }
		(rule__MaxLengthValidator__Group__0)
		{ after(grammarAccess.getMaxLengthValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulepatternValidator
entryRulepatternValidator
:
{ before(grammarAccess.getPatternValidatorRule()); }
	 rulepatternValidator
{ after(grammarAccess.getPatternValidatorRule()); } 
	 EOF 
;

// Rule patternValidator
rulepatternValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPatternValidatorAccess().getGroup()); }
		(rule__PatternValidator__Group__0)
		{ after(grammarAccess.getPatternValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleminValidator
entryRuleminValidator
:
{ before(grammarAccess.getMinValidatorRule()); }
	 ruleminValidator
{ after(grammarAccess.getMinValidatorRule()); } 
	 EOF 
;

// Rule minValidator
ruleminValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinValidatorAccess().getGroup()); }
		(rule__MinValidator__Group__0)
		{ after(grammarAccess.getMinValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemaxValidator
entryRulemaxValidator
:
{ before(grammarAccess.getMaxValidatorRule()); }
	 rulemaxValidator
{ after(grammarAccess.getMaxValidatorRule()); } 
	 EOF 
;

// Rule maxValidator
rulemaxValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxValidatorAccess().getGroup()); }
		(rule__MaxValidator__Group__0)
		{ after(grammarAccess.getMaxValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleminBytesValidator
entryRuleminBytesValidator
:
{ before(grammarAccess.getMinBytesValidatorRule()); }
	 ruleminBytesValidator
{ after(grammarAccess.getMinBytesValidatorRule()); } 
	 EOF 
;

// Rule minBytesValidator
ruleminBytesValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMinBytesValidatorAccess().getGroup()); }
		(rule__MinBytesValidator__Group__0)
		{ after(grammarAccess.getMinBytesValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulemaxBytesValidator
entryRulemaxBytesValidator
:
{ before(grammarAccess.getMaxBytesValidatorRule()); }
	 rulemaxBytesValidator
{ after(grammarAccess.getMaxBytesValidatorRule()); } 
	 EOF 
;

// Rule maxBytesValidator
rulemaxBytesValidator 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMaxBytesValidatorAccess().getGroup()); }
		(rule__MaxBytesValidator__Group__0)
		{ after(grammarAccess.getMaxBytesValidatorAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoption
entryRuleoption
:
{ before(grammarAccess.getOptionRule()); }
	 ruleoption
{ after(grammarAccess.getOptionRule()); } 
	 EOF 
;

// Rule option
ruleoption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionAccess().getSettingAssignment()); }
		(rule__Option__SettingAssignment)
		{ after(grammarAccess.getOptionAccess().getSettingAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleoptionSetting
entryRuleoptionSetting
:
{ before(grammarAccess.getOptionSettingRule()); }
	 ruleoptionSetting
{ after(grammarAccess.getOptionSettingRule()); } 
	 EOF 
;

// Rule optionSetting
ruleoptionSetting 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getOptionSettingAccess().getDtoOptionParserRuleCall()); }
		ruledtoOption
		{ after(grammarAccess.getOptionSettingAccess().getDtoOptionParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuledtoOption
entryRuledtoOption
:
{ before(grammarAccess.getDtoOptionRule()); }
	 ruledtoOption
{ after(grammarAccess.getDtoOptionRule()); } 
	 EOF 
;

// Rule dtoOption
ruledtoOption 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDtoOptionAccess().getDtoKeyword()); }
		('dto')?
		{ after(grammarAccess.getDtoOptionAccess().getDtoKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePATTERN_VALUE
entryRulePATTERN_VALUE
:
{ before(grammarAccess.getPATTERN_VALUERule()); }
	 rulePATTERN_VALUE
{ after(grammarAccess.getPATTERN_VALUERule()); } 
	 EOF 
;

// Rule PATTERN_VALUE
rulePATTERN_VALUE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPATTERN_VALUEAccess().getGroup()); }
		(rule__PATTERN_VALUE__Group__0)
		{ after(grammarAccess.getPATTERN_VALUEAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleONE_TO_MANY
entryRuleONE_TO_MANY
:
{ before(grammarAccess.getONE_TO_MANYRule()); }
	 ruleONE_TO_MANY
{ after(grammarAccess.getONE_TO_MANYRule()); } 
	 EOF 
;

// Rule ONE_TO_MANY
ruleONE_TO_MANY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getONE_TO_MANYAccess().getOneToManyKeyword()); }
		'OneToMany'
		{ after(grammarAccess.getONE_TO_MANYAccess().getOneToManyKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMANY_TO_ONE
entryRuleMANY_TO_ONE
:
{ before(grammarAccess.getMANY_TO_ONERule()); }
	 ruleMANY_TO_ONE
{ after(grammarAccess.getMANY_TO_ONERule()); } 
	 EOF 
;

// Rule MANY_TO_ONE
ruleMANY_TO_ONE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMANY_TO_ONEAccess().getManyToOneKeyword()); }
		'ManyToOne'
		{ after(grammarAccess.getMANY_TO_ONEAccess().getManyToOneKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleONE_TO_ONE
entryRuleONE_TO_ONE
:
{ before(grammarAccess.getONE_TO_ONERule()); }
	 ruleONE_TO_ONE
{ after(grammarAccess.getONE_TO_ONERule()); } 
	 EOF 
;

// Rule ONE_TO_ONE
ruleONE_TO_ONE 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getONE_TO_ONEAccess().getOneToOneKeyword()); }
		'OneToOne'
		{ after(grammarAccess.getONE_TO_ONEAccess().getOneToOneKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleMANY_TO_MANY
entryRuleMANY_TO_MANY
:
{ before(grammarAccess.getMANY_TO_MANYRule()); }
	 ruleMANY_TO_MANY
{ after(grammarAccess.getMANY_TO_MANYRule()); } 
	 EOF 
;

// Rule MANY_TO_MANY
ruleMANY_TO_MANY 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getMANY_TO_MANYAccess().getManyToManyKeyword()); }
		'ManyToMany'
		{ after(grammarAccess.getMANY_TO_MANYAccess().getManyToManyKeyword()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		(
			{ before(grammarAccess.getDomainModelAccess().getEntitiesAssignment_0()); }
			(rule__DomainModel__EntitiesAssignment_0)
			{ after(grammarAccess.getDomainModelAccess().getEntitiesAssignment_0()); }
		)
		(
			{ before(grammarAccess.getDomainModelAccess().getEntitiesAssignment_0()); }
			(rule__DomainModel__EntitiesAssignment_0)*
			{ after(grammarAccess.getDomainModelAccess().getEntitiesAssignment_0()); }
		)
	)
	|
	(
		{ before(grammarAccess.getDomainModelAccess().getSettingsAssignment_1()); }
		(rule__DomainModel__SettingsAssignment_1)
		{ after(grammarAccess.getDomainModelAccess().getSettingsAssignment_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FieldType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFieldTypeAccess().getStringFieldTypeParserRuleCall_0()); }
		rulestringFieldType
		{ after(grammarAccess.getFieldTypeAccess().getStringFieldTypeParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getNumericFieldTypeParserRuleCall_1()); }
		rulenumericFieldType
		{ after(grammarAccess.getFieldTypeAccess().getNumericFieldTypeParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getBooleanFieldTypeParserRuleCall_2()); }
		rulebooleanFieldType
		{ after(grammarAccess.getFieldTypeAccess().getBooleanFieldTypeParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getDateFieldTypeParserRuleCall_3()); }
		ruledateFieldType
		{ after(grammarAccess.getFieldTypeAccess().getDateFieldTypeParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getBlobFieldTypeParserRuleCall_4()); }
		ruleblobFieldType
		{ after(grammarAccess.getFieldTypeAccess().getBlobFieldTypeParserRuleCall_4()); }
	)
	|
	(
		{ before(grammarAccess.getFieldTypeAccess().getEntityTypeParserRuleCall_5()); }
		ruleentityType
		{ after(grammarAccess.getFieldTypeAccess().getEntityTypeParserRuleCall_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericTypesAccess().getINTEGERParserRuleCall_0()); }
		ruleINTEGER
		{ after(grammarAccess.getNumericTypesAccess().getINTEGERParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getLONGParserRuleCall_1()); }
		ruleLONG
		{ after(grammarAccess.getNumericTypesAccess().getLONGParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getBIG_DECIMALParserRuleCall_2()); }
		ruleBIG_DECIMAL
		{ after(grammarAccess.getNumericTypesAccess().getBIG_DECIMALParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getFLOATParserRuleCall_3()); }
		ruleFLOAT
		{ after(grammarAccess.getNumericTypesAccess().getFLOATParserRuleCall_3()); }
	)
	|
	(
		{ before(grammarAccess.getNumericTypesAccess().getDOUBLEParserRuleCall_4()); }
		ruleDOUBLE
		{ after(grammarAccess.getNumericTypesAccess().getDOUBLEParserRuleCall_4()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateTypesAccess().getDATEParserRuleCall_0()); }
		ruleDATE
		{ after(grammarAccess.getDateTypesAccess().getDATEParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getDateTypesAccess().getLOCAL_DATEParserRuleCall_1()); }
		ruleLOCAL_DATE
		{ after(grammarAccess.getDateTypesAccess().getLOCAL_DATEParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getDateTypesAccess().getZONED_DATETIMEParserRuleCall_2()); }
		ruleZONED_DATETIME
		{ after(grammarAccess.getDateTypesAccess().getZONED_DATETIMEParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getDateTypesAccess().getINSTANTParserRuleCall_3()); }
		ruleINSTANT
		{ after(grammarAccess.getDateTypesAccess().getINSTANTParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobTypes__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobTypesAccess().getBLOBParserRuleCall_0()); }
		ruleBLOB
		{ after(grammarAccess.getBlobTypesAccess().getBLOBParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlobTypesAccess().getANY_BLOBParserRuleCall_1()); }
		ruleANY_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getANY_BLOBParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlobTypesAccess().getIMAGE_BLOBParserRuleCall_2()); }
		ruleIMAGE_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getIMAGE_BLOBParserRuleCall_2()); }
	)
	|
	(
		{ before(grammarAccess.getBlobTypesAccess().getTEXT_BLOBParserRuleCall_3()); }
		ruleTEXT_BLOB
		{ after(grammarAccess.getBlobTypesAccess().getTEXT_BLOBParserRuleCall_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getRequiredAssignment_0()); }
		(rule__StringValidators__RequiredAssignment_0)
		{ after(grammarAccess.getStringValidatorsAccess().getRequiredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMinLenghtAssignment_1()); }
		(rule__StringValidators__MinLenghtAssignment_1)
		{ after(grammarAccess.getStringValidatorsAccess().getMinLenghtAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMaxLenghtAssignment_2()); }
		(rule__StringValidators__MaxLenghtAssignment_2)
		{ after(grammarAccess.getStringValidatorsAccess().getMaxLenghtAssignment_2()); }
	)
	|
	(
		{ before(grammarAccess.getStringValidatorsAccess().getPatternAssignment_3()); }
		(rule__StringValidators__PatternAssignment_3)
		{ after(grammarAccess.getStringValidatorsAccess().getPatternAssignment_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getRequiredAssignment_0()); }
		(rule__NumericValidators__RequiredAssignment_0)
		{ after(grammarAccess.getNumericValidatorsAccess().getRequiredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMinValueAssignment_1()); }
		(rule__NumericValidators__MinValueAssignment_1)
		{ after(grammarAccess.getNumericValidatorsAccess().getMinValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMaxValueAssignment_2()); }
		(rule__NumericValidators__MaxValueAssignment_2)
		{ after(grammarAccess.getNumericValidatorsAccess().getMaxValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getRequiredAssignment_0()); }
		(rule__BlobValidators__RequiredAssignment_0)
		{ after(grammarAccess.getBlobValidatorsAccess().getRequiredAssignment_0()); }
	)
	|
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMinBytesValueAssignment_1()); }
		(rule__BlobValidators__MinBytesValueAssignment_1)
		{ after(grammarAccess.getBlobValidatorsAccess().getMinBytesValueAssignment_1()); }
	)
	|
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueAssignment_2()); }
		(rule__BlobValidators__MaxBytesValueAssignment_2)
		{ after(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueAssignment_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
	'entity'
	{ after(grammarAccess.getEntityAccess().getEntityKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
	(rule__Entity__NameAssignment_1)
	{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_2()); }
	(rule__Entity__Group_2__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3()); }
	(rule__Entity__Group_3__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftParenthesisKeyword_2_0()); }
	'('
	{ after(grammarAccess.getEntityAccess().getLeftParenthesisKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__1__Impl
	rule__Entity__Group_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getTableNameAssignment_2_1()); }
	(rule__Entity__TableNameAssignment_2_1)
	{ after(grammarAccess.getEntityAccess().getTableNameAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_2__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightParenthesisKeyword_2_2()); }
	')'
	{ after(grammarAccess.getEntityAccess().getRightParenthesisKeyword_2_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__0__Impl
	rule__Entity__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3_0()); }
	'{'
	{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__1__Impl
	rule__Entity__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3_1()); }
	(rule__Entity__Group_3_1__0)?
	{ after(grammarAccess.getEntityAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_3_2()); }
	'}'
	{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_3_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1__0__Impl
	rule__Entity__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_0()); }
	(rule__Entity__FieldsAssignment_3_1_0)
	{ after(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getGroup_3_1_1()); }
	(rule__Entity__Group_3_1_1__0)*
	{ after(grammarAccess.getEntityAccess().getGroup_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_3_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1_1__0__Impl
	rule__Entity__Group_3_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getCommaKeyword_3_1_1_0()); }
	(',')?
	{ after(grammarAccess.getEntityAccess().getCommaKeyword_3_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Entity__Group_3_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_3_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_1_1()); }
	(rule__Entity__FieldsAssignment_3_1_1_1)
	{ after(grammarAccess.getEntityAccess().getFieldsAssignment_3_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EntityField__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityField__Group__0__Impl
	rule__EntityField__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityField__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityFieldAccess().getIdAssignment_0()); }
	(rule__EntityField__IdAssignment_0)
	{ after(grammarAccess.getEntityFieldAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityField__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EntityField__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityField__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEntityFieldAccess().getTypeAssignment_1()); }
	(rule__EntityField__TypeAssignment_1)
	{ after(grammarAccess.getEntityFieldAccess().getTypeAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFieldType__Group__0__Impl
	rule__StringFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldTypeAccess().getNameAssignment_0()); }
	(rule__StringFieldType__NameAssignment_0)
	{ after(grammarAccess.getStringFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringFieldTypeAccess().getConstraintsAssignment_1()); }
	(rule__StringFieldType__ConstraintsAssignment_1)*
	{ after(grammarAccess.getStringFieldTypeAccess().getConstraintsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__NumericFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericFieldType__Group__0__Impl
	rule__NumericFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericFieldTypeAccess().getNameAssignment_0()); }
	(rule__NumericFieldType__NameAssignment_0)
	{ after(grammarAccess.getNumericFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__NumericFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getNumericFieldTypeAccess().getConstraintsAssignment_1()); }
	(rule__NumericFieldType__ConstraintsAssignment_1)*
	{ after(grammarAccess.getNumericFieldTypeAccess().getConstraintsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BooleanFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanFieldType__Group__0__Impl
	rule__BooleanFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanFieldTypeAccess().getNameAssignment_0()); }
	(rule__BooleanFieldType__NameAssignment_0)
	{ after(grammarAccess.getBooleanFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BooleanFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBooleanFieldTypeAccess().getRequiredAssignment_1()); }
	(rule__BooleanFieldType__RequiredAssignment_1)*
	{ after(grammarAccess.getBooleanFieldTypeAccess().getRequiredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DateFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFieldType__Group__0__Impl
	rule__DateFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFieldTypeAccess().getTypeAssignment_0()); }
	(rule__DateFieldType__TypeAssignment_0)
	{ after(grammarAccess.getDateFieldTypeAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DateFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDateFieldTypeAccess().getRequiredAssignment_1()); }
	(rule__DateFieldType__RequiredAssignment_1)?
	{ after(grammarAccess.getDateFieldTypeAccess().getRequiredAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__BlobFieldType__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlobFieldType__Group__0__Impl
	rule__BlobFieldType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlobFieldTypeAccess().getNameAssignment_0()); }
	(rule__BlobFieldType__NameAssignment_0)
	{ after(grammarAccess.getBlobFieldTypeAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__BlobFieldType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getBlobFieldTypeAccess().getConstraintsAssignment_1()); }
	(rule__BlobFieldType__ConstraintsAssignment_1)*
	{ after(grammarAccess.getBlobFieldTypeAccess().getConstraintsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinLengthValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLengthValidator__Group__0__Impl
	rule__MinLengthValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthValidatorAccess().getMinlengthKeyword_0()); }
	'minlength'
	{ after(grammarAccess.getMinLengthValidatorAccess().getMinlengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLengthValidator__Group__1__Impl
	rule__MinLengthValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMinLengthValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLengthValidator__Group__2__Impl
	rule__MinLengthValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMinLengthValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinLengthValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinLengthValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinLengthValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMinLengthValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxLengthValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLengthValidator__Group__0__Impl
	rule__MaxLengthValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthValidatorAccess().getMaxlengthKeyword_0()); }
	'maxlength'
	{ after(grammarAccess.getMaxLengthValidatorAccess().getMaxlengthKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLengthValidator__Group__1__Impl
	rule__MaxLengthValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMaxLengthValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLengthValidator__Group__2__Impl
	rule__MaxLengthValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMaxLengthValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxLengthValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxLengthValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxLengthValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMaxLengthValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PatternValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__0__Impl
	rule__PatternValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getPatternKeyword_0()); }
	'pattern'
	{ after(grammarAccess.getPatternValidatorAccess().getPatternKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__1__Impl
	rule__PatternValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getPatternValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__2__Impl
	rule__PatternValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getPATTERN_VALUEParserRuleCall_2()); }
	rulePATTERN_VALUE
	{ after(grammarAccess.getPatternValidatorAccess().getPATTERN_VALUEParserRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PatternValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PatternValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPatternValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getPatternValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__0__Impl
	rule__MinValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getMinKeyword_0()); }
	'min'
	{ after(grammarAccess.getMinValidatorAccess().getMinKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__1__Impl
	rule__MinValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMinValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__2__Impl
	rule__MinValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMinValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMinValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__0__Impl
	rule__MaxValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getMaxKeyword_0()); }
	'max'
	{ after(grammarAccess.getMaxValidatorAccess().getMaxKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__1__Impl
	rule__MaxValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMaxValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__2__Impl
	rule__MaxValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMaxValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMaxValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MinBytesValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinBytesValidator__Group__0__Impl
	rule__MinBytesValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinBytesValidatorAccess().getMinbytesKeyword_0()); }
	'minbytes'
	{ after(grammarAccess.getMinBytesValidatorAccess().getMinbytesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinBytesValidator__Group__1__Impl
	rule__MinBytesValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinBytesValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMinBytesValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinBytesValidator__Group__2__Impl
	rule__MinBytesValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinBytesValidatorAccess().getINTTerminalRuleCall_2()); }
	RULE_INT
	{ after(grammarAccess.getMinBytesValidatorAccess().getINTTerminalRuleCall_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MinBytesValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MinBytesValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMinBytesValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMinBytesValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__MaxBytesValidator__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxBytesValidator__Group__0__Impl
	rule__MaxBytesValidator__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxBytesValidatorAccess().getMaxbytesKeyword_0()); }
	'maxbytes'
	{ after(grammarAccess.getMaxBytesValidatorAccess().getMaxbytesKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxBytesValidator__Group__1__Impl
	rule__MaxBytesValidator__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxBytesValidatorAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getMaxBytesValidatorAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxBytesValidator__Group__2__Impl
	rule__MaxBytesValidator__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxBytesValidatorAccess().getValueAssignment_2()); }
	(rule__MaxBytesValidator__ValueAssignment_2)
	{ after(grammarAccess.getMaxBytesValidatorAccess().getValueAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__MaxBytesValidator__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getMaxBytesValidatorAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getMaxBytesValidatorAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__PATTERN_VALUE__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PATTERN_VALUE__Group__0__Impl
	rule__PATTERN_VALUE__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PATTERN_VALUE__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPATTERN_VALUEAccess().getQuotationMarkKeyword_0()); }
	('"')*
	{ after(grammarAccess.getPATTERN_VALUEAccess().getQuotationMarkKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__PATTERN_VALUE__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__PATTERN_VALUE__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PATTERN_VALUE__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPATTERN_VALUEAccess().getQuotationMarkKeyword_1()); }
	'"'
	{ after(grammarAccess.getPATTERN_VALUEAccess().getQuotationMarkKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DomainModel__EntitiesAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainModelAccess().getEntitiesEntityParserRuleCall_0_0()); }
		ruleentity
		{ after(grammarAccess.getDomainModelAccess().getEntitiesEntityParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DomainModel__SettingsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDomainModelAccess().getSettingsOptionParserRuleCall_1_0()); }
		ruleoption
		{ after(grammarAccess.getDomainModelAccess().getSettingsOptionParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__TableNameAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getTableNameIDTerminalRuleCall_2_1_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityAccess().getTableNameIDTerminalRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FieldsAssignment_3_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_0_0()); }
		ruleentityField
		{ after(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FieldsAssignment_3_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_1_1_0()); }
		ruleentityField
		{ after(grammarAccess.getEntityAccess().getFieldsEntityFieldParserRuleCall_3_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityField__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityFieldAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getEntityFieldAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EntityField__TypeAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEntityFieldAccess().getTypeFieldTypeParserRuleCall_1_0()); }
		rulefieldType
		{ after(grammarAccess.getEntityFieldAccess().getTypeFieldTypeParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldTypeAccess().getNameStringTypeParserRuleCall_0_0()); }
		rulestringType
		{ after(grammarAccess.getStringFieldTypeAccess().getNameStringTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringFieldType__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringFieldTypeAccess().getConstraintsStringValidatorsParserRuleCall_1_0()); }
		rulestringValidators
		{ after(grammarAccess.getStringFieldTypeAccess().getConstraintsStringValidatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericFieldTypeAccess().getNameNumericTypesParserRuleCall_0_0()); }
		rulenumericTypes
		{ after(grammarAccess.getNumericFieldTypeAccess().getNameNumericTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericFieldType__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericFieldTypeAccess().getConstraintsNumericValidatorsParserRuleCall_1_0()); }
		rulenumericValidators
		{ after(grammarAccess.getNumericFieldTypeAccess().getConstraintsNumericValidatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFieldTypeAccess().getNameBOOLEAN_TYPEParserRuleCall_0_0()); }
		ruleBOOLEAN_TYPE
		{ after(grammarAccess.getBooleanFieldTypeAccess().getNameBOOLEAN_TYPEParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanFieldType__RequiredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBooleanFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getBooleanFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateFieldTypeAccess().getTypeDateTypesParserRuleCall_0_0()); }
		ruledateTypes
		{ after(grammarAccess.getDateFieldTypeAccess().getTypeDateTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DateFieldType__RequiredAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDateFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getDateFieldTypeAccess().getRequiredRequiredValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobFieldTypeAccess().getNameBlobTypesParserRuleCall_0_0()); }
		ruleblobTypes
		{ after(grammarAccess.getBlobFieldTypeAccess().getNameBlobTypesParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobFieldType__ConstraintsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobFieldTypeAccess().getConstraintsBlobValidatorsParserRuleCall_1_0()); }
		ruleblobValidators
		{ after(grammarAccess.getBlobFieldTypeAccess().getConstraintsBlobValidatorsParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__RequiredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getStringValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__MinLenghtAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMinLenghtMinLengthValidatorParserRuleCall_1_0()); }
		ruleminLengthValidator
		{ after(grammarAccess.getStringValidatorsAccess().getMinLenghtMinLengthValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__MaxLenghtAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getMaxLenghtMaxLengthValidatorParserRuleCall_2_0()); }
		rulemaxLengthValidator
		{ after(grammarAccess.getStringValidatorsAccess().getMaxLenghtMaxLengthValidatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringValidators__PatternAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringValidatorsAccess().getPatternPatternValidatorParserRuleCall_3_0()); }
		rulepatternValidator
		{ after(grammarAccess.getStringValidatorsAccess().getPatternPatternValidatorParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__RequiredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getNumericValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__MinValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMinValueMinValidatorParserRuleCall_1_0()); }
		ruleminValidator
		{ after(grammarAccess.getNumericValidatorsAccess().getMinValueMinValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__NumericValidators__MaxValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getNumericValidatorsAccess().getMaxValueMaxValidatorParserRuleCall_2_0()); }
		rulemaxValidator
		{ after(grammarAccess.getNumericValidatorsAccess().getMaxValueMaxValidatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__RequiredAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
		rulerequiredValidator
		{ after(grammarAccess.getBlobValidatorsAccess().getRequiredRequiredValidatorParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__MinBytesValueAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMinBytesValueMinBytesValidatorParserRuleCall_1_0()); }
		ruleminBytesValidator
		{ after(grammarAccess.getBlobValidatorsAccess().getMinBytesValueMinBytesValidatorParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__BlobValidators__MaxBytesValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueMaxBytesValidatorParserRuleCall_2_0()); }
		rulemaxBytesValidator
		{ after(grammarAccess.getBlobValidatorsAccess().getMaxBytesValueMaxBytesValidatorParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__MaxBytesValidator__ValueAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getMaxBytesValidatorAccess().getValueINTTerminalRuleCall_2_0()); }
		RULE_INT
		{ after(grammarAccess.getMaxBytesValidatorAccess().getValueINTTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Option__SettingAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getOptionAccess().getSettingOptionSettingParserRuleCall_0()); }
		ruleoptionSetting
		{ after(grammarAccess.getOptionAccess().getSettingOptionSettingParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
